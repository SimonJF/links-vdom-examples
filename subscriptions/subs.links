open Tags
open Attrs
open Events
open VirtualDom

typename Model = (mousePos : (Int,Int));
typename Msg = [| MousePosition : (Int,Int) |];

fun getMousePosition(f) {
  TupleIntHandler("mousemove", f)
}

fun mousePositionHandler() {
  getMousePosition(fun(a,b) {
    MousePosition((a,b))
  })
}

sig updt : (Msg, Model) ~%e~> Model
fun updt(msg, model) { 
  switch(msg) {
    case MousePosition((a,b)) ->
      (model with mousePos = (a,b))
  }
}

sig view : (Model) ~%e~> Doc(Msg)
fun view(model) {
  switch(model.mousePos) {
    case ((a,b)) ->
      div ([id ("testdiv"), style ("width:100%;height:100%")],[],
      [textDoc(intToString(a))])
  }
}


fun mainPage(_, _) {
  var initialModel = (mousePos = (0,0));
  var subscriptions = [mousePositionHandler()];
  var evtHandler = runVDom("placeholder", view, updt, initialModel, subscriptions);
  page
  <html>
    <head>
      <title>Links - Subscriptions</title>
    </head>
    <body>
      <div id="placeholder"></div>
    </body>
  </html>
}

fun main() {
  addRoute("/", mainPage);
  addStaticRoute("/css", "css", [("css", "text/css")]);
  servePages()
}

main()